name: Build & Deploy to Azure

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  # â†³ edite somente se mudar o nome do ACR ou da imagem
  REGISTRY_NAME:       quodacr
  REGISTRY_LOGIN:      quodacr.azurecr.io
  IMAGE_NAME:          antifraude

jobs:
  build-test-push:
    runs-on: ubuntu-22.04          # evita problema do Flapdoodle 6.0.5

    outputs:
      image: ${{ steps.build-image.outputs.image }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17 + Maven cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      # -------------------- TESTES --------------------
      - name: Run unit & integration tests (quiet)
        id: maven-test
        run: |
          set -e
          ./mvnw -B -q -ntp clean test > test.log 2>&1
        shell: bash

      - name: Upload full test log on failure
        if: failure() && steps.maven-test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-log
          path: test.log
      # ------------------------------------------------

      - name: Azure login (service-principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR via Azure CLI
        run: az acr login --name ${{ env.REGISTRY_NAME }}

      - name: Build & push Docker image
        id: build-image
        run: |
          TAG=${{ env.REGISTRY_LOGIN }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker build --pull --tag "$TAG" .
          docker push  "$TAG"
          echo "image=$TAG" >> "$GITHUB_OUTPUT"

  deploy:
    needs: build-test-push
    runs-on: ubuntu-22.04

    steps:
      - name: Azure login (service-principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name:       ${{ secrets.WEBAPP_NAME }}
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          images:         ${{ needs.build-test-push.outputs.image }}